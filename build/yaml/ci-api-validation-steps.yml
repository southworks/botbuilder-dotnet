steps:
- script: |
    git clone https://joel.mut:nmwe4rrsitb36s6h36nq3ted3u6nzvwd4qtalufkjpyypmvllfua@dev.azure.com/joelmut93/manx-pipeline-testing/_git/manx-pipeline-testing $(System.ArtifactsDirectory)/Artifacts
  displayName: 'Download DLLs'

- task: NuGetCommand@2
  displayName: 'NuGet Install of Compatability Target Package: $(BotBuilderDll)'
  inputs:
    command: custom
    arguments: 'install $(BotBuilderDll) -Version $(ApiCompatVersion) -OutputDirectory $(System.DefaultWorkingDirectory)\DownloadedNuGet'

- task: CmdLine@1
  displayName: 'Run dir'
  inputs:
    filename: dir
    arguments: '..\*.* /s'
  enabled: false

- script: |
    git clone https://joel.mut:nmwe4rrsitb36s6h36nq3ted3u6nzvwd4qtalufkjpyypmvllfua@dev.azure.com/joelmut93/manx-pipeline-testing/_git/api-compat-files $(System.DefaultWorkingDirectory)\..\outputLibraries
  displayName: 'Clone Repository'

- task: SOUTHWORKS.binaries-comparer.custom-build-release-task.binaries-comparer@0
  displayName: 'Compare Binaries'
  inputs:
    contractsRootFolder: 'DownloadedNuGet\$(BotBuilderDll).$(ApiCompatVersion)\lib\netstandard2.0'
    contractsFileName: '$(BotBuilderDll).dll'
    implFolder: '$(System.ArtifactsDirectory)/Artifacts'
    failOnIssue: true
    resolveFx: false
    generateLog: true
    outputFilename: '$(BotBuilderDll).$(ApiCompatVersion).CompatResults.txt'
    outputFolder: '$(System.DefaultWorkingDirectory)\..\outputLibraries'
    useBaseline: false

- powershell: |
   $FileName = "$(System.DefaultWorkingDirectory)\..\outputLibraries\$(BotBuilderDll).$(ApiCompatVersion).CompatResults.txt"
   $FileContent = @(Get-Content $FileName)
    
   $FileContent[0] = $FileContent[0] + " compared against [version $(ApiCompatVersion)](https://www.nuget.org/packages/$(BotBuilderDll)/$(ApiCompatVersion))"
    
   if ($FileContent.Length -eq 1) {
    [system.io.file]::WriteAllText($fileName,$FileContent)
   } else {
    Set-Content $fileName $FileContent
   }
   
   Write-Host "The updated line 1: `n$FileContent[0]"
  displayName: 'Insert nuget link into ApiCompat results file.'

- script: |
    cd $(System.DefaultWorkingDirectory)\..\outputLibraries
    git config --global user.name "botbuilder-dotnet-pipeline"
    git config --global user.email botbuilder-dotnet@pipeline.com
    git pull
    git add .
    git commit -m 'test'
    git push
  displayName: 'Upload DLLs'

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Compat Results artifact'
#   inputs:
#     ArtifactName: '$(BotBuilderDll).$(ApiCompatVersion).CompatResults'

- script: |
   cd ..
   dir /s
  displayName: 'Dir workspace'
  continueOnError: true
  condition: succeededOrFailed()
