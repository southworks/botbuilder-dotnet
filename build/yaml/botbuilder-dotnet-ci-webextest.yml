pool:
  vmImage: 'windows-2019'
  name: Azure Pipelines
  demands:
  - msbuild
  - visualstudio

variables:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'debug'

steps:
- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 2.1.x'
  inputs:
    version: 2.1.x

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 3.0.x'
  inputs:
    version: 3.0.x

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 4.9.1'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(System.DefaultWorkingDirectory)\Microsoft.Bot.Builder.sln'

- task: VSBuild@1
  displayName: 'Build solution Microsoft.Bot.Builder.sln'
  inputs:
    solution: Microsoft.Bot.Builder.sln
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\Microsoft.Bot.Builder.Adapters.Webex.TestBot.csproj'
    arguments: '--output $(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\PublishedBot --framework netcoreapp2.1'
    modifyOutputPath: false

- task: AzureCLI@1
  displayName: 'Create Azure Resources'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: 'call az deployment create --name "$(BotGroup)" --template-file "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\DeploymentTemplates\template-with-new-rg.json" --location "westus" --parameters appId=$(AppId) appSecret="$(AppSecret)" botId="$(BotName)" botSku=F0 newAppServicePlanName="$(BotName)" newWebAppName="$(BotName)" groupName="$(BotGroup)" groupLocation="westus" newAppServicePlanLocation="westus" webexPublicAddress="https://$(BotName).azurewebsites.net/api/messages" webexAccessToken="$(WebexBotAccessToken)" webexSecret="$(WebexWebhookSecret)" webexWebhookName="$(WebexWebhookName)"'

- task: AzureCLI@1
  displayName: 'Zip Deploy Bot'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: 'call az webapp deployment source config-zip --resource-group "$(BotGroup)" --name "$(BotName)" --src "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\PublishedBot\PublishedBot.zip"'

- powershell: |
   echo '##vso[task.setvariable variable=WEBEX_ROOM_ID]$(WebexRoomId)'
   echo '##vso[task.setvariable variable=REFRESH_TOKEN]$(RefreshToken)'
   echo '##vso[task.setvariable variable=TESTAPPID]$(AppId)'
   echo '##vso[task.setvariable variable=TESTPASSWORD]$(AppSecret)'
   echo '##vso[task.setvariable variable=INTEGRATION_CLIENT_SECRET]$(WebexIntegrationClientSecret)'
  displayName: 'PowerShell Script'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'FunctionalTests\Microsoft.Bot.Builder.FunctionalTests\Microsoft.Bot.Builder.FunctionalTests.csproj'
    arguments: '-v n --configuration $(BuildConfiguration) --no-build --no-restore --filter WebexClientTest'

- task: AzureCLI@1
  displayName: 'Delete Resources'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: 'call az group delete -n "$(BotGroup)" --yes'
  condition: always()

